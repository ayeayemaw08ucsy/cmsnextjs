{"ast":null,"code":"var _jsxFileName = \"/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/components/Pagination.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Fragment } from 'react';\n\nconst Paignator = ({\n  skip,\n  range,\n  handlePaginationChange\n}) => {\n  skip = !!skip ? skip : 0;\n  const {\n    0: page,\n    1: setPageNumber\n  } = useState(1);\n  useEffect(() => {\n    return setPageNumber(skip);\n  }, [skip]);\n\n  const moveToNextPage = () => {\n    if (page > 1) {\n      handlePaginationChange(page - 1);\n      return setPageNumber(page - 1);\n    }\n\n    return null;\n  };\n\n  const moveToPreviousPage = () => {\n    if (page < range[range.length - 1]) {\n      handlePaginationChange(page + 1);\n      return setPageNumber(page + 1);\n    }\n\n    return null;\n  };\n\n  const moveToPage = pageNumber => {\n    handlePaginationChange(pageNumber);\n    return setPageNumber(pageNumber);\n  };\n\n  const renderPageIndicators = ({\n    num,\n    index\n  }) => {\n    return __jsx(\"span\", {\n      onClick: () => moveToPage(num),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, num) // <span>{num}</span>\n    ;\n  };\n\n  return (// <Fragment>\n    //     <div>\n    //         {range.length > 1 ?(\n    //         <button onClick={moveToNextPage}>\n    //             <span>{'<'}</span>\n    //             <span>Previous</span>\n    //         </button>):null}\n    //      {range.map(renderPageIndicators)}\n    //      {range.length > 1 ? (\n    //          <button onClick={moveToPreviousPage}>\n    //              <span>Next</span>{' '}\n    //              <span>{'>'}</span>\n    //          </button>\n    //      ):null}\n    //     </div>\n    // </Fragment>\n    __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Paignator\"))\n  );\n};\n\nexport default Paignator;","map":{"version":3,"sources":["/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/components/Pagination.js"],"names":["React","useState","useEffect","Fragment","Paignator","skip","range","handlePaginationChange","page","setPageNumber","moveToNextPage","moveToPreviousPage","length","moveToPage","pageNumber","renderPageIndicators","num","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAmCC,QAAnC,QAAkD,OAAlD;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA2C;AAEzDF,EAAAA,IAAI,GAAG,CAAC,CAACA,IAAF,GAAQA,IAAR,GAAe,CAAtB;AAEA,QAAM;AAAA,OAACG,IAAD;AAAA,OAAOC;AAAP,MAAwBR,QAAQ,CAAC,CAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAOO,aAAa,CAACJ,IAAD,CAApB;AACH,GAFQ,EAGT,CAACA,IAAD,CAHS,CAAT;;AAKA,QAAMK,cAAc,GAAG,MAAM;AAEzB,QAAGF,IAAI,GAAG,CAAV,EAAa;AACTD,MAAAA,sBAAsB,CAACC,IAAI,GAAC,CAAN,CAAtB;AACA,aAAOC,aAAa,CAACD,IAAI,GAAC,CAAN,CAApB;AACH;;AAED,WAAO,IAAP;AACH,GARD;;AAUA,QAAMG,kBAAkB,GAAG,MAAM;AAC7B,QAAGH,IAAI,GAAGF,KAAK,CAACA,KAAK,CAACM,MAAN,GAAa,CAAd,CAAf,EAAiC;AAC7BL,MAAAA,sBAAsB,CAACC,IAAI,GAAC,CAAN,CAAtB;AACA,aAAOC,aAAa,CAACD,IAAI,GAAC,CAAN,CAApB;AACH;;AACD,WAAO,IAAP;AACH,GAND;;AAQD,QAAOK,UAAU,GAAIC,UAAD,IAAgB;AAC/BP,IAAAA,sBAAsB,CAACO,UAAD,CAAtB;AACA,WAAOL,aAAa,CAACK,UAAD,CAApB;AACH,GAHF;;AAKC,QAAMC,oBAAoB,GAAG,CAAC;AAACC,IAAAA,GAAD;AAAMC,IAAAA;AAAN,GAAD,KAAkB;AAC3C,WACI;AAAM,MAAA,OAAO,EAAE,MAAMJ,UAAU,CAACG,GAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,GADL,CADJ,CAII;AAJJ;AAMH,GAPD;;AASA,SACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH;AAlBJ;AAoBH,CA/DD;;AAiEA,eAAeZ,SAAf","sourcesContent":["import React ,{useState, useEffect,Fragment} from 'react';\n\n\nconst Paignator = ({skip, range, handlePaginationChange}) => {\n\n    skip = !!skip? skip : 0;\n\n    const [page, setPageNumber] = useState(1);\n\n    useEffect(() => {\n        return setPageNumber(skip);\n    },\n    [skip]);\n\n    const moveToNextPage = () => {\n        \n        if(page > 1) {\n            handlePaginationChange(page-1);\n            return setPageNumber(page-1);\n        }\n\n        return null;\n    }\n\n    const moveToPreviousPage = () => {\n        if(page < range[range.length-1]) {\n            handlePaginationChange(page+1);\n            return setPageNumber(page+1);\n        }\n        return null;\n    }\n\n   const  moveToPage = (pageNumber) => {\n        handlePaginationChange(pageNumber);\n        return setPageNumber(pageNumber);\n    }\n\n    const renderPageIndicators = ({num, index}) => {\n        return (\n            <span onClick={() => moveToPage(num)}>\n                {num}\n            </span>\n            // <span>{num}</span>\n        )\n    }\n\n    return (\n        // <Fragment>\n        //     <div>\n        //         {range.length > 1 ?(\n        //         <button onClick={moveToNextPage}>\n        //             <span>{'<'}</span>\n        //             <span>Previous</span>\n        //         </button>):null}\n        //      {range.map(renderPageIndicators)}\n\n        //      {range.length > 1 ? (\n        //          <button onClick={moveToPreviousPage}>\n        //              <span>Next</span>{' '}\n        //              <span>{'>'}</span>\n        //          </button>\n        //      ):null}\n        //     </div>\n        // </Fragment>\n        <p><h1>Paignator</h1></p>\n    );\n};\n\nexport default Paignator;"]},"metadata":{},"sourceType":"module"}