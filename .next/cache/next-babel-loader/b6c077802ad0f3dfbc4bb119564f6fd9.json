{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/pages/add-article.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { styleBody, styleTextField } from '../components/SharedStyles';\n\nvar AddArticle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddArticle, _React$Component);\n\n  function AddArticle(props) {\n    var _this;\n\n    _classCallCheck(this, AddArticle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddArticle).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (value) {\n      _this.setState({\n        value: value\n      });\n\n      if (_this.props.onChange) {\n        // Send the changes up to the parent component as an HTML string.\n        // This is here to demonstrate using `.toString()` but in a real app it\n        // would be better to avoid generating a string on each change.\n        _this.props.onChange(value.toString('html'));\n      }\n    });\n\n    _this.state = {\n      title: props.title || '',\n      slug: props.slug || '',\n      content: props.content || ''\n    };\n    return _this;\n  }\n\n  _createClass(AddArticle, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        style: styleBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(TextField, {\n        id: \"title\",\n        style: styleTextField,\n        onChange: function onChange(event) {\n          _this2.setState({\n            title: event.target.value\n          });\n        },\n        value: this.state.title,\n        type: \"text\",\n        label: \"Article's title\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), __jsx(TextField, {\n        id: \"slug\",\n        style: styleTextField,\n        onChange: function onChange(event) {\n          _this2.setState({\n            title: event.target.value\n          });\n        },\n        value: this.state.slug,\n        type: \"text\",\n        label: \"Article's slug\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return AddArticle;\n}(React.Component);\n\n_defineProperty(AddArticle, \"propTypes\", {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  onChange: PropTypes.func\n});\n\nexport default AddArticle;","map":{"version":3,"sources":["/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/pages/add-article.js"],"names":["React","TextField","PropTypes","styleBody","styleTextField","AddArticle","props","value","setState","onChange","toString","state","title","slug","content","onSubmit","event","target","Component","string","isRequired","func"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,EAAkBC,cAAlB,QAAwC,4BAAxC;;IAGMC,U;;;;;AASF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,+DAUR,UAACC,KAAD,EAAW;AAClB,YAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAALA;AAAD,OAAd;;AACA,UAAI,MAAKD,KAAL,CAAWG,QAAf,EAAyB;AACvB;AACA;AACA;AACA,cAAKH,KAAL,CAAWG,QAAX,CACEF,KAAK,CAACG,QAAN,CAAe,MAAf,CADF;AAGD;AACF,KApBgB;;AAGf,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,IAAe,EADb;AAETC,MAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,IAAc,EAFX;AAGTC,MAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,IAAiB;AAHjB,KAAb;AAHe;AAQlB;;;;6BAcQ;AAAA;;AACL,aACI;AAAK,QAAA,KAAK,EAAEX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,QAAQ,EAAE,KAAKY,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,EAAE,EAAC,OAAd;AAAsB,QAAA,KAAK,EAAEX,cAA7B;AACG,QAAA,QAAQ,EAAE,kBAACY,KAAD,EAAW;AACjB,UAAA,MAAI,CAACR,QAAL,CAAc;AAACI,YAAAA,KAAK,EAAEI,KAAK,CAACC,MAAN,CAAaV;AAArB,WAAd;AACH,SAHJ;AAIA,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,KAJlB;AAKA,QAAA,IAAI,EAAC,MALL;AAMA,QAAA,KAAK,EAAC,iBANN;AAOA,QAAA,QAAQ,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,MAAC,SAAD;AAAW,QAAA,EAAE,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAER,cAA5B;AACG,QAAA,QAAQ,EAAE,kBAACY,KAAD,EAAW;AACjB,UAAA,MAAI,CAACR,QAAL,CAAc;AAACI,YAAAA,KAAK,EAAEI,KAAK,CAACC,MAAN,CAAaV;AAArB,WAAd;AACH,SAHJ;AAIA,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWE,IAJlB;AAKA,QAAA,IAAI,EAAC,MALL;AAMA,QAAA,KAAK,EAAC,gBANN;AAOA,QAAA,QAAQ,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QApBF,CADF,CADJ;AA2BH;;;;EA3DoBb,KAAK,CAACkB,S;;gBAAzBb,U,eAEgB;AACdO,EAAAA,KAAK,EAAEV,SAAS,CAACiB,MAAV,CAAiBC,UADV;AAEdN,EAAAA,OAAO,EAAEZ,SAAS,CAACiB,MAAV,CAAiBC,UAFZ;AAGdP,EAAAA,IAAI,EAAEX,SAAS,CAACiB,MAAV,CAAiBC,UAHT;AAIdX,EAAAA,QAAQ,EAAEP,SAAS,CAACmB;AAJN,C;;AA4DtB,eAAehB,UAAf","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport {styleBody,styleTextField}  from '../components/SharedStyles';\n\n\nclass AddArticle extends React.Component {\n   \n  static  propTypes = {\n        title: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        slug: PropTypes.string.isRequired,\n        onChange: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: props.title || '',\n            slug: props.slug || '' ,\n            content: props.content || ''\n        }\n    }\n\n    onChange = (value) => {\n        this.setState({value});\n        if (this.props.onChange) {\n          // Send the changes up to the parent component as an HTML string.\n          // This is here to demonstrate using `.toString()` but in a real app it\n          // would be better to avoid generating a string on each change.\n          this.props.onChange(\n            value.toString('html')\n          );\n        }\n      };\n  \n    render() {\n        return (\n            <div style={styleBody}>\n              <form onSubmit={this.onSubmit}>\n                <TextField id=\"title\" style={styleTextField}\n                   onChange={(event) => {\n                       this.setState({title: event.target.value})\n                   }}\n                value={this.state.title}\n                type=\"text\"\n                label=\"Article's title\"\n                required\n                />\n                <br/>\n                <TextField id=\"slug\" style={styleTextField}\n                   onChange={(event) => {\n                       this.setState({title: event.target.value})\n                   }}\n                value={this.state.slug}\n                type=\"text\"\n                label=\"Article's slug\"\n                required\n                />\n                <br/>\n                \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddArticle;"]},"metadata":{},"sourceType":"module"}