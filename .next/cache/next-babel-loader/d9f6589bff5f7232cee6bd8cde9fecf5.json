{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport fetch from 'isomorphic-unfetch';\nvar PORT = process.env.PORT || 8080;\nvar ROOT_URL = process.env.ROOT_URL || \"http://localhost:\".concat(PORT);\nexport default function sendRequest(api_base_path) {\n  var options,\n      headers,\n      response,\n      data,\n      _args = arguments;\n  return _regeneratorRuntime.async(function sendRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n          headers = _Object$assign({}, options.headers || {}, {\n            'Content-type': 'application/json; charset=UTF-8'\n          });\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(ROOT_URL).concat(api_base_path), _Object$assign({\n            method: 'POST',\n            credentials: 'same-origin',\n            mode: 'no-cors'\n          }, options, {\n            headers: headers\n          })));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n\n          if (!data.error) {\n            _context.next = 10;\n            break;\n          }\n\n          throw new Error(data.error);\n\n        case 10:\n          return _context.abrupt(\"return\", data);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/lib/api/sendRequest.js"],"names":["fetch","PORT","process","env","ROOT_URL","sendRequest","api_base_path","options","headers","method","credentials","mode","response","json","data","error","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACA,IAAMG,QAAQ,GAAGF,OAAO,CAACC,GAAR,CAAYC,QAAZ,+BAA4CH,IAA5C,CAAjB;AAEA,eAAe,SAAeI,WAAf,CAA2BC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyCC,UAAAA,OAAzC,2DAAmD,EAAnD;AAELC,UAAAA,OAFK,GAEK,eAAc,EAAd,EAAkBD,OAAO,CAACC,OAAR,IAAmB,EAArC,EAAwC;AACpD,4BAAe;AADqC,WAAxC,CAFL;AAAA;AAAA,2CAMYR,KAAK,WACrBI,QADqB,SACVE,aADU,GAExB,eAAc;AAAEG,YAAAA,MAAM,EAAE,MAAV;AAAkBC,YAAAA,WAAW,EAAE,aAA/B;AAA6CC,YAAAA,IAAI,EAAE;AAAnD,WAAd,EAA8EJ,OAA9E,EAAuF;AAAEC,YAAAA,OAAO,EAAPA;AAAF,WAAvF,CAFwB,CANjB;;AAAA;AAMLI,UAAAA,QANK;AAAA;AAAA,2CAWQA,QAAQ,CAACC,IAAT,EAXR;;AAAA;AAWLC,UAAAA,IAXK;;AAAA,eAaRA,IAAI,CAACC,KAbG;AAAA;AAAA;AAAA;;AAAA,gBAcD,IAAIC,KAAJ,CAAUF,IAAI,CAACC,KAAf,CAdC;;AAAA;AAAA,2CAiBJD,IAjBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nconst PORT = process.env.PORT || 8080;\nconst ROOT_URL = process.env.ROOT_URL || `http://localhost:${PORT}`;\n\nexport default async function sendRequest(api_base_path,options = {}) {\n\n    const headers = Object.assign({}, options.headers || {},{\n        'Content-type':'application/json; charset=UTF-8',\n    });\n\n    const response = await fetch(\n        `${ROOT_URL}${api_base_path}`,\n        Object.assign({ method: 'POST', credentials: 'same-origin',mode: 'no-cors' }, options, { headers }),\n    );\n\n    const data = await response.json();\n\n    if(data.error) {\n        throw new Error(data.error);\n    }\n\n    return data;\n}"]},"metadata":{},"sourceType":"module"}