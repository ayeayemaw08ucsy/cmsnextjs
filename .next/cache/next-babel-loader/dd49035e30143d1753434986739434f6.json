{"ast":null,"code":"var _jsxFileName = \"/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/pages/add-article.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport { styleBody, styleTextField } from '../components/SharedStyles';\nimport RichTextEditor from 'react-rte';\n\nclass AddArticle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onChange\", value => {\n      this.setState({\n        value\n      });\n\n      if (this.props.onChange) {\n        // Send the changes up to the parent component as an HTML string.\n        // This is here to demonstrate using `.toString()` but in a real app it\n        // would be better to avoid generating a string on each change.\n        this.props.onChange(value.toString('html'));\n      }\n    });\n\n    this.state = {\n      title: props.title || '',\n      slug: props.slug || '',\n      content: props.content || ''\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: styleBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"title\",\n      style: styleTextField,\n      onChange: event => {\n        this.setState({\n          title: event.target.value\n        });\n      },\n      value: this.state.title,\n      type: \"text\",\n      label: \"Article's title\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(TextField, {\n      id: \"slug\",\n      style: styleTextField,\n      onChange: event => {\n        this.setState({\n          title: event.target.value\n        });\n      },\n      value: this.state.slug,\n      type: \"text\",\n      label: \"Article's slug\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), __jsx(RichTextEditor, {\n      onChange: this.onChange,\n      value: this.state.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }\n\n}\n\n_defineProperty(AddArticle, \"propTypes\", {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  onChange: PropTypes.func\n});\n\nexport default AddArticle;","map":{"version":3,"sources":["/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/pages/add-article.js"],"names":["React","TextField","PropTypes","styleBody","styleTextField","RichTextEditor","AddArticle","Component","constructor","props","value","setState","onChange","toString","state","title","slug","content","render","onSubmit","event","target","string","isRequired","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,EAAkBC,cAAlB,QAAwC,4BAAxC;AACA,OAAOC,cAAP,MAA2B,WAA3B;;AAEA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AASrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,sCAUPC,KAAD,IAAW;AAClB,WAAKC,QAAL,CAAc;AAACD,QAAAA;AAAD,OAAd;;AACA,UAAI,KAAKD,KAAL,CAAWG,QAAf,EAAyB;AACvB;AACA;AACA;AACA,aAAKH,KAAL,CAAWG,QAAX,CACEF,KAAK,CAACG,QAAN,CAAe,MAAf,CADF;AAGD;AACF,KApBgB;;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,IAAe,EADb;AAETC,MAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,IAAc,EAFX;AAGTC,MAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,IAAiB;AAHjB,KAAb;AAKH;;AAcDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAEf,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKgB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,EAAE,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAEf,cAA7B;AACG,MAAA,QAAQ,EAAGgB,KAAD,IAAW;AACjB,aAAKT,QAAL,CAAc;AAACI,UAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaX;AAArB,SAAd;AACH,OAHJ;AAIA,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,KAJlB;AAKA,MAAA,IAAI,EAAC,MALL;AAMA,MAAA,KAAK,EAAC,iBANN;AAOA,MAAA,QAAQ,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,MAAC,SAAD;AAAW,MAAA,EAAE,EAAC,MAAd;AAAqB,MAAA,KAAK,EAAEX,cAA5B;AACG,MAAA,QAAQ,EAAGgB,KAAD,IAAW;AACjB,aAAKT,QAAL,CAAc;AAACI,UAAAA,KAAK,EAAEK,KAAK,CAACC,MAAN,CAAaX;AAArB,SAAd;AACH,OAHJ;AAIA,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWE,IAJlB;AAKA,MAAA,IAAI,EAAC,MALL;AAMA,MAAA,KAAK,EAAC,gBANN;AAOA,MAAA,QAAQ,MAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAqBE,MAAC,cAAD;AACA,MAAA,QAAQ,EAAE,KAAKJ,QADf;AAEA,MAAA,KAAK,EAAE,KAAKE,KAAL,CAAWG,OAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF,CADJ;AA8BH;;AA9DoC;;gBAAnCX,U,eAEgB;AACdS,EAAAA,KAAK,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UADV;AAEdN,EAAAA,OAAO,EAAEf,SAAS,CAACoB,MAAV,CAAiBC,UAFZ;AAGdP,EAAAA,IAAI,EAAEd,SAAS,CAACoB,MAAV,CAAiBC,UAHT;AAIdX,EAAAA,QAAQ,EAAEV,SAAS,CAACsB;AAJN,C;;AA+DtB,eAAelB,UAAf","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport {styleBody,styleTextField}  from '../components/SharedStyles';\nimport RichTextEditor from 'react-rte';\n\nclass AddArticle extends React.Component {\n   \n  static  propTypes = {\n        title: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n        slug: PropTypes.string.isRequired,\n        onChange: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: props.title || '',\n            slug: props.slug || '' ,\n            content: props.content || ''\n        }\n    }\n\n    onChange = (value) => {\n        this.setState({value});\n        if (this.props.onChange) {\n          // Send the changes up to the parent component as an HTML string.\n          // This is here to demonstrate using `.toString()` but in a real app it\n          // would be better to avoid generating a string on each change.\n          this.props.onChange(\n            value.toString('html')\n          );\n        }\n      };\n  \n    render() {\n        return (\n            <div style={styleBody}>\n              <form onSubmit={this.onSubmit}>\n                <TextField id=\"title\" style={styleTextField}\n                   onChange={(event) => {\n                       this.setState({title: event.target.value})\n                   }}\n                value={this.state.title}\n                type=\"text\"\n                label=\"Article's title\"\n                required\n                />\n                <br/>\n                <TextField id=\"slug\" style={styleTextField}\n                   onChange={(event) => {\n                       this.setState({title: event.target.value})\n                   }}\n                value={this.state.slug}\n                type=\"text\"\n                label=\"Article's slug\"\n                required\n                />\n                <br/>\n                <RichTextEditor \n                onChange={this.onChange}\n                value={this.state.content}/>\n                \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddArticle;"]},"metadata":{},"sourceType":"module"}