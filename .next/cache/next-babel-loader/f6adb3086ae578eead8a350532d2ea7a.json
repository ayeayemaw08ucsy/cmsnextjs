{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _stylePaginator,\n    _jsxFileName = \"/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/components/Pagination.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, Fragment } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { stylePaginatorPageNum, stylePaginatorPageNumSelected } from '../components/SharedStyles';\nvar stylePaginator = (_stylePaginator = {\n  margin: 20,\n  padding: 20\n}, _defineProperty(_stylePaginator, \"padding\", '10px 45px'), _defineProperty(_stylePaginator, \"align\", 'center'), _stylePaginator);\n\nvar Paignator = function Paignator(_ref) {\n  var skip = _ref.skip,\n      range = _ref.range,\n      handlePaginationChange = _ref.handlePaginationChange;\n  // console.log('Range !!!!!!!!!!',range);\n  skip = !!skip ? skip : 0;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPageNumber = _useState[1];\n\n  useEffect(function () {\n    return setPageNumber(skip);\n  }, [skip]);\n\n  var moveToNextPage = function moveToNextPage() {\n    if (page > 1) {\n      handlePaginationChange(page - 1);\n      return setPageNumber(page - 1);\n    }\n\n    return null;\n  };\n\n  var moveToPreviousPage = function moveToPreviousPage() {\n    if (page < range[range.length - 1]) {\n      handlePaginationChange(page + 1);\n      return setPageNumber(page + 1);\n    }\n\n    return null;\n  };\n\n  var moveToPage = function moveToPage(pageNumber) {\n    handlePaginationChange(pageNumber);\n    return setPageNumber(pageNumber);\n  };\n\n  var renderPageIndicators = function renderPageIndicators(num, index) {\n    console.log('Num******', num, page);\n    return (// <Button onClick={() => moveToPage(num)}>\n      //     {num}\n      // </Button>\n      __jsx(Button, {\n        className: \"stylePaginatorPageNum \".concat(num == page ? 'stylePaginatorPageNumSelected' : ''),\n        key: index,\n        onClick: function onClick() {\n          return moveToPage(num);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, num)\n    );\n  };\n\n  return __jsx(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: stylePaginator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, range.length > 1 ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: moveToNextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, '<'), ' ', __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Previous\")) : null, range.map(renderPageIndicators), range.length > 1 ? __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: moveToPreviousPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Next\"), ' ', __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, '>')) : null));\n};\n\nexport default Paignator;","map":{"version":3,"sources":["/Users/ayeayemaw/Downloads/WK/CMSBoilerplate/components/Pagination.js"],"names":["React","useState","useEffect","Fragment","Button","stylePaginatorPageNum","stylePaginatorPageNumSelected","stylePaginator","margin","padding","Paignator","skip","range","handlePaginationChange","page","setPageNumber","moveToNextPage","moveToPreviousPage","length","moveToPage","pageNumber","renderPageIndicators","num","index","console","log","map"],"mappings":"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","sourcesContent":["import React ,{useState, useEffect,Fragment} from 'react';\nimport Button from '@material-ui/core/Button';\nimport {stylePaginatorPageNum,stylePaginatorPageNumSelected} from '../components/SharedStyles';\n\nconst stylePaginator = {\n    margin: 20,\n    padding: 20,\n    padding: '10px 45px',\n    align: 'center',\n  }\n\nconst Paignator = ({skip, range, handlePaginationChange}) => {\n   // console.log('Range !!!!!!!!!!',range);\n    skip = !!skip? skip : 0;\n\n    const [page, setPageNumber] = useState(1);\n\n    useEffect(() => {\n        return setPageNumber(skip);\n    },\n    [skip]);\n\n    const moveToNextPage = () => {\n        \n        if(page > 1) {\n            handlePaginationChange(page-1);\n            return setPageNumber(page-1);\n        }\n\n        return null;\n    }\n\n    const moveToPreviousPage = () => {\n        if(page < range[range.length-1]) {\n            handlePaginationChange(page+1);\n            return setPageNumber(page+1);\n        }\n        return null;\n    }\n\n   const  moveToPage = (pageNumber) => {\n        handlePaginationChange(pageNumber);\n        return setPageNumber(pageNumber);\n    }\n\n    const renderPageIndicators = (num, index) => {\n        console.log('Num******',num,page);\n        return (\n            // <Button onClick={() => moveToPage(num)}>\n            //     {num}\n            // </Button>\n            <Button\n            className={`stylePaginatorPageNum ${\n              num == page ? 'stylePaginatorPageNumSelected' : ''\n            }`}\n            key={index}\n            onClick={() => moveToPage(num)}\n          >\n            {num}\n          </Button>\n        )\n    }\n\n    return (\n            <Fragment>\n            <div style={stylePaginator}>\n                {range.length > 1 ?(\n                <Button variant=\"contained\" color=\"secondary\" onClick={moveToNextPage}>\n                    <span>{'<'}</span>{' '}\n                    <span>Previous</span>\n                </Button>):null}\n             {range.map(renderPageIndicators)}\n\n             {range.length > 1 ? (\n                 <Button variant=\"contained\" color=\"secondary\" onClick={moveToPreviousPage}>\n                     <span>Next</span>{' '}\n                     <span>{'>'}</span>\n                 </Button>\n             ):null}\n            </div>\n            </Fragment>\n        \n    );\n};\n\nexport default Paignator;"]},"metadata":{},"sourceType":"module"}